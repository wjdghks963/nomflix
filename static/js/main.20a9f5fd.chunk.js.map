{"version":3,"sources":["assets/noPosterSmall.PNG","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","axios","create","baseURL","params","api_key","language","moviesApi","nowPlaying","get","upcoming","popular","movieDetail","id","concat","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","Container","styled","div","_templateObject","Object","taggedTemplateLiteral","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","prototype","PropTypes","string","isRequired","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","imageUrl","rating","year","_ref$isMovie","isMovie","Link","to","Poster_Container","require","default","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","first_air_dat","TVContainer","TV_TVPresenter","movieResult","tvResults","searchTerm","handleSubmit","event","preventDefault","_this","searchByTerm","updateTerm","value","target","_callee","_yield$moviesApi$sear","movieResults","_yield$tvApi$search","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","SearchContainer_default","SearchContainer","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Header_templateObject4","withRouter","pathname","location","href","Cotainer","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","BrowserRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.20a9f5fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.e1b39942.PNG\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"5ed0078c9d4ddccd354a766d0a01cee7\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: `videos`,\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv.airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: `videos`,\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term), // In url space or !@# change to text\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n); // children >> reserved react prop\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      Loading\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.prototype = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) =>\r\n    `http://image.tmdb.org/t/p/w300${props.bgUrl}`});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl ? imageUrl : require(\"../assets/noPosterSmall.PNG\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ★\r\n          </span>\r\n          {\"\"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader /> // loading 중일때\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying &&\r\n          nowPlaying.length > 0 && ( // nowplaying 존재 하나 체크하고 True면 Section 렌더\r\n            <Section title=\"Now Playing\">\r\n              {nowPlaying.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  } // && 앞이 정의된 후에 substring(0, 4) 년도만 자름\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section> // Section 안이 children\r\n          )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { moviesApi } from \"api\";\r\n\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    movieDetail: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // componentDidMount()는 컴포넌트가 마운트된 직후, 즉 트리에 삽입된 직후에 호출됩니다DOM 노드가 있어야 하는 초기화 작업은 이 메서드에서 이루어지면 됩니다. 외부에서 데이터를 불러와야 한다면, 네트워크 요청을 보내기 적절한 위치입니다.\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }, // data 안 results를 nowPlaying으로 이름 바꿈\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying, // = nowPlaying: nowPlaying\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\",\r\n      });\r\n    } finally {\r\n      // try or catch 둘 중 하나가 되면 실행\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\ncontainer : data, state(상태값)을 가지고 api를 불러와 모든 로직처리 (데이터담당)\r\npresenter : container가 처리한 data들을 보여주는 함수형 컴포넌트, state,api,class 다루지 않음 (스타일 담당)\r\n*/\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet  from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_dat.substring(0, 4)} // && 앞이 정의된 후에 substring(0, 4) 년도만 자름\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_dat.substring(0, 4)} // && 앞이 정의된 후에 substring(0, 4) 년도만 자름\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today Shows\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_dat.substring(0, 4)} // && 앞이 정의된 후에 substring(0, 4) 년도만 자름\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer; // TVContainer를 default로 export\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: null,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({ error: \"Can't find tv information.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { moviesApi, tvApi } from \"api\";\r\nimport SearchContainer from \"./SearchContainer\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResult: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResult, tvResults, searchTerm, loading, error, updateTerm } =\r\n      this.state;\r\n    return (\r\n      <SearchContainer\r\n        movieResult={movieResult}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 1);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  &:hover {\r\n    background-color: blue;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#2498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to href=\"/\">\r\n          Movies\r\n        </SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to href=\"/tv\">\r\n          TV\r\n        </SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to href=\"/search\">\r\n          Search\r\n        </SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport  Helmet  from \"react-helmet\";\r\n\r\nconst Cotainer = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: position;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Cotainer>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`http://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `http://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.PNG\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>-</Divider>\r\n            <Item>{result.runtime || result.episode_run_time}</Item>\r\n            <Divider>-</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  // index는 장르의 갯수이고\r\n                  index === result.genres.length - 1 // 마지막 장르\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Cotainer>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport { moviesApi, tvApi } from \"api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\"), // includes > pathname안에 /movie/가 있다 true or false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id); // parseInt = 특정 진수의 정수 반환 문자 = NaN\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({\r\n          data: { result }, // data가 result이다.  == result.data ()안에 넣었기 때문에 위의 result = null과 다름\r\n        } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({\r\n          data: { result },\r\n        } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Cant't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}